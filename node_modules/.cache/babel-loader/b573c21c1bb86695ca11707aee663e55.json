{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian1\\\\Desktop\\\\final-frontIII-Adrian-pucheta\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useMemo, useReducer } from \"react\";\nimport { themes } from \"../../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: themes.light,\n  data: []\n};\nconst GLOBAL_ACTIONS = {\n  SWITCH_THEME: \"SWITCH_THEME\",\n  UPDATE_USERS: \"UPDATE_USERS\"\n};\n\nconst globalContextReducer = (state, action) => {\n  const {\n    SWITCH_THEME,\n    UPDATE_USERS\n  } = GLOBAL_ACTIONS;\n\n  switch (action.type) {\n    case SWITCH_THEME:\n      return { ...state,\n        theme: action.payload\n      };\n\n    case UPDATE_USERS:\n      return { ...state,\n        data: action.payload\n      };\n\n    default:\n      throw new Error('Invalid action type');\n  }\n};\n\nexport const ContextGlobal = /*#__PURE__*/createContext();\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [globalState, dispatchGlobalState] = useReducer(globalContextReducer, initialState);\n  const contextValue = useMemo(() => ({\n    globalState,\n    dispatchGlobalState\n  }), [globalState, dispatchGlobalState]);\n  useEffect(() => {\n    console.log(\"calling global state dispatcher\");\n    console.log(\"users\");\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"theme\", globalState.theme);\n  }, [globalState.theme]);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"/w8Jd6gOJ544WKWrEvW6c6AK8uY=\");\n\n_c = ContextProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useMemo","useReducer","themes","initialState","theme","light","data","GLOBAL_ACTIONS","SWITCH_THEME","UPDATE_USERS","globalContextReducer","state","action","type","payload","Error","ContextGlobal","ContextProvider","children","globalState","dispatchGlobalState","contextValue","console","log","localStorage","setItem","useGlobalContext"],"sources":["C:/Users/Adrian1/Desktop/final-frontIII-Adrian-pucheta/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useContext, useEffect, useMemo, useReducer } from \"react\";\r\nimport { themes } from \"../../context\";\r\n\r\n\r\n\r\nexport const initialState = { theme: themes.light, data: [] }\r\n\r\nconst GLOBAL_ACTIONS = {\r\n  SWITCH_THEME: \"SWITCH_THEME\",\r\n  UPDATE_USERS: \"UPDATE_USERS\"\r\n}\r\n\r\nconst globalContextReducer = (state, action) => {\r\n  const { SWITCH_THEME, UPDATE_USERS } = GLOBAL_ACTIONS\r\n\r\n  switch (action.type) {\r\n    case SWITCH_THEME:\r\n      return { ...state, theme: action.payload }\r\n    case UPDATE_USERS:\r\n      return { ...state, data: action.payload }\r\n    default:\r\n      throw new Error('Invalid action type');\r\n  }\r\n}\r\n\r\nexport const ContextGlobal = createContext();\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  const [globalState, dispatchGlobalState] = useReducer(globalContextReducer, initialState);\r\n  const contextValue = useMemo(() => ({\r\n    globalState,\r\n    dispatchGlobalState\r\n}), [globalState, dispatchGlobalState])\r\n\r\n\r\nuseEffect(() => {\r\n  console.log(\"calling global state dispatcher\")\r\n  console.log(\"users\")\r\n\r\n  \r\n}, [])\r\n\r\nuseEffect(() => {\r\n  localStorage.setItem(\"theme\", globalState.theme)\r\n}, [globalState.theme]);\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={contextValue}>\r\n    {children}\r\n</ContextGlobal.Provider>\r\n  );\r\n};\r\n\r\n\r\nexport const useGlobalContext = () => useContext(ContextGlobal)"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,OAA/C,EAAwDC,UAAxD,QAA0E,OAA1E;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAIA,OAAO,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAEF,MAAM,CAACG,KAAhB;EAAuBC,IAAI,EAAE;AAA7B,CAArB;AAEP,MAAMC,cAAc,GAAG;EACrBC,YAAY,EAAE,cADO;EAErBC,YAAY,EAAE;AAFO,CAAvB;;AAKA,MAAMC,oBAAoB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC9C,MAAM;IAAEJ,YAAF;IAAgBC;EAAhB,IAAiCF,cAAvC;;EAEA,QAAQK,MAAM,CAACC,IAAf;IACE,KAAKL,YAAL;MACE,OAAO,EAAE,GAAGG,KAAL;QAAYP,KAAK,EAAEQ,MAAM,CAACE;MAA1B,CAAP;;IACF,KAAKL,YAAL;MACE,OAAO,EAAE,GAAGE,KAAL;QAAYL,IAAI,EAAEM,MAAM,CAACE;MAAzB,CAAP;;IACF;MACE,MAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;EANJ;AAQD,CAXD;;AAaA,OAAO,MAAMC,aAAa,gBAAGnB,aAAa,EAAnC;AAEP,OAAO,MAAMoB,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C,MAAM,CAACC,WAAD,EAAcC,mBAAd,IAAqCnB,UAAU,CAACS,oBAAD,EAAuBP,YAAvB,CAArD;EACA,MAAMkB,YAAY,GAAGrB,OAAO,CAAC,OAAO;IAClCmB,WADkC;IAElCC;EAFkC,CAAP,CAAD,EAG1B,CAACD,WAAD,EAAcC,mBAAd,CAH0B,CAA5B;EAMFrB,SAAS,CAAC,MAAM;IACduB,OAAO,CAACC,GAAR,CAAY,iCAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,OAAZ;EAGD,CALQ,EAKN,EALM,CAAT;EAOAxB,SAAS,CAAC,MAAM;IACdyB,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,WAAW,CAACf,KAA1C;EACD,CAFQ,EAEN,CAACe,WAAW,CAACf,KAAb,CAFM,CAAT;EAIE,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAEiB,YAA/B;IAAA,UACCH;EADD;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAxBM;;GAAMD,e;;KAAAA,e;AA2Bb,OAAO,MAAMS,gBAAgB,GAAG;EAAA;;EAAA,OAAM5B,UAAU,CAACkB,aAAD,CAAhB;AAAA,CAAzB;;IAAMU,gB"},"metadata":{},"sourceType":"module"}