{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian1\\\\Desktop\\\\final-frontIII-Adrian-pucheta\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useMemo, useReducer } from \"react\";\nimport { THEME, USERS_URL } from \"./constants\";\nimport { useFetch } from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  theme: THEME.LIGHT,\n  data: []\n};\nconst GLOBAL_ACTIONS = {\n  SWITCH_THEME: \"SWITCH_THEME\",\n  UPDATE_USERS: \"UPDATE_USERS\"\n};\n\nconst globalContextReducer = (state, action) => {\n  const {\n    SWITCH_THEME,\n    UPDATE_USERS\n  } = GLOBAL_ACTIONS;\n\n  switch (action.type) {\n    case SWITCH_THEME:\n      return { ...state,\n        theme: action.payload\n      };\n\n    case UPDATE_USERS:\n      return { ...state,\n        data: action.payload\n      };\n\n    default:\n      throw new Error('Invalid action type');\n  }\n};\n\nconst ContextGlobal = /*#__PURE__*/createContext();\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [globalState, dispatchGlobalState] = useReducer(globalContextReducer, initialState);\n  const contextValue = useMemo(() => ({\n    globalState,\n    dispatchGlobalState\n  }), [globalState, dispatchGlobalState]);\n  const users = useFetch(USERS_URL);\n  useEffect(() => {\n    console.log(\"calling global state dispatcher\");\n    console.log(\"users\", users);\n\n    if (users) {\n      dispatchGlobalState({\n        type: \"UPDATE_USERS\",\n        payload: users.data\n      });\n    }\n  }, [users]);\n  useEffect(() => {\n    localStorage.setItem(\"theme\", globalState.theme);\n  }, [globalState.theme]);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContextProvider, \"X8ArWXr2n1wnRK3ZyFjaOkmqx+c=\", false, function () {\n  return [useFetch];\n});\n\n_c = ContextProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useMemo","useReducer","THEME","USERS_URL","useFetch","initialState","theme","LIGHT","data","GLOBAL_ACTIONS","SWITCH_THEME","UPDATE_USERS","globalContextReducer","state","action","type","payload","Error","ContextGlobal","ContextProvider","children","globalState","dispatchGlobalState","contextValue","users","console","log","localStorage","setItem","useGlobalContext"],"sources":["C:/Users/Adrian1/Desktop/final-frontIII-Adrian-pucheta/src/Components/utils/global.context.jsx"],"sourcesContent":["import {createContext, useContext, useEffect, useMemo, useReducer} from \"react\";\r\nimport { THEME, USERS_URL} from \"./constants\";\r\nimport { useFetch } from \"./useFetch\";\r\n\r\nconst initialState = {theme: THEME.LIGHT, data: []}\r\n\r\nconst GLOBAL_ACTIONS = {\r\n  SWITCH_THEME: \"SWITCH_THEME\",\r\n  UPDATE_USERS: \"UPDATE_USERS\"\r\n}\r\n\r\nconst globalContextReducer = (state, action) => {\r\n    const {SWITCH_THEME, UPDATE_USERS} = GLOBAL_ACTIONS\r\n\r\n    switch (action.type) {\r\n        case SWITCH_THEME:\r\n            return {...state, theme: action.payload}\r\n        case UPDATE_USERS:\r\n            return {...state, data: action.payload}\r\n        default:\r\n            throw new Error('Invalid action type');\r\n    }\r\n}\r\n\r\nconst ContextGlobal = createContext();\r\n\r\nexport const ContextProvider = ({children}) => {\r\n    //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n    const [globalState, dispatchGlobalState] = useReducer(globalContextReducer, initialState);\r\n    const contextValue = useMemo(() => ({\r\n        globalState,\r\n        dispatchGlobalState\r\n    }), [globalState, dispatchGlobalState])\r\n    const users = useFetch(USERS_URL);\r\n\r\n    useEffect(() => {\r\n        console.log(\"calling global state dispatcher\")\r\n        console.log(\"users\", users)\r\n\r\n        if (users) {\r\n            dispatchGlobalState({type: \"UPDATE_USERS\", payload: users.data})\r\n        }\r\n    }, [users])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"theme\", globalState.theme)\r\n    }, [globalState.theme]);\r\n\r\n    return (\r\n        <ContextGlobal.Provider value={contextValue}>\r\n            {children}\r\n        </ContextGlobal.Provider>\r\n    );\r\n};\r\n\r\nexport const useGlobalContext = () => useContext(ContextGlobal)"],"mappings":";;;;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,SAAnC,EAA8CC,OAA9C,EAAuDC,UAAvD,QAAwE,OAAxE;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAgC,aAAhC;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,MAAMC,YAAY,GAAG;EAACC,KAAK,EAAEJ,KAAK,CAACK,KAAd;EAAqBC,IAAI,EAAE;AAA3B,CAArB;AAEA,MAAMC,cAAc,GAAG;EACrBC,YAAY,EAAE,cADO;EAErBC,YAAY,EAAE;AAFO,CAAvB;;AAKA,MAAMC,oBAAoB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC5C,MAAM;IAACJ,YAAD;IAAeC;EAAf,IAA+BF,cAArC;;EAEA,QAAQK,MAAM,CAACC,IAAf;IACI,KAAKL,YAAL;MACI,OAAO,EAAC,GAAGG,KAAJ;QAAWP,KAAK,EAAEQ,MAAM,CAACE;MAAzB,CAAP;;IACJ,KAAKL,YAAL;MACI,OAAO,EAAC,GAAGE,KAAJ;QAAWL,IAAI,EAAEM,MAAM,CAACE;MAAxB,CAAP;;IACJ;MACI,MAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;EANR;AAQH,CAXD;;AAaA,MAAMC,aAAa,gBAAGrB,aAAa,EAAnC;AAEA,OAAO,MAAMsB,eAAe,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAC3C;EACA,MAAM,CAACC,WAAD,EAAcC,mBAAd,IAAqCrB,UAAU,CAACW,oBAAD,EAAuBP,YAAvB,CAArD;EACA,MAAMkB,YAAY,GAAGvB,OAAO,CAAC,OAAO;IAChCqB,WADgC;IAEhCC;EAFgC,CAAP,CAAD,EAGxB,CAACD,WAAD,EAAcC,mBAAd,CAHwB,CAA5B;EAIA,MAAME,KAAK,GAAGpB,QAAQ,CAACD,SAAD,CAAtB;EAEAJ,SAAS,CAAC,MAAM;IACZ0B,OAAO,CAACC,GAAR,CAAY,iCAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;;IAEA,IAAIA,KAAJ,EAAW;MACPF,mBAAmB,CAAC;QAACP,IAAI,EAAE,cAAP;QAAuBC,OAAO,EAAEQ,KAAK,CAAChB;MAAtC,CAAD,CAAnB;IACH;EACJ,CAPQ,EAON,CAACgB,KAAD,CAPM,CAAT;EASAzB,SAAS,CAAC,MAAM;IACZ4B,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BP,WAAW,CAACf,KAA1C;EACH,CAFQ,EAEN,CAACe,WAAW,CAACf,KAAb,CAFM,CAAT;EAIA,oBACI,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAEiB,YAA/B;IAAA,UACKH;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CA3BM;;GAAMD,e;UAOKf,Q;;;KAPLe,e;AA6Bb,OAAO,MAAMU,gBAAgB,GAAG;EAAA;;EAAA,OAAM/B,UAAU,CAACoB,aAAD,CAAhB;AAAA,CAAzB;;IAAMW,gB"},"metadata":{},"sourceType":"module"}